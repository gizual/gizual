name: web
on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
    tags:
      - "v*"

permissions:
  contents: read
  id-token: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-web

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"

      - run: yarn --immutable

      - name: Setup Rust
        uses: ./.github/actions/setup-rust

      - name: Build the app
        run: yarn build

      - name: Store the build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web-dist
          path: apps/gizual-app/dist/
          retention-days: 1

  e2e:
    needs: build
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/steschi/playwright:v1.42.1-jammy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"

      - run: yarn --immutable

      - name: Retrieve the build artifacts
        uses: actions/download-artifact@v3
        with:
          name: web-dist
          path: apps/gizual-app/dist/

      - name: build api
        run: yarn build:api

      - name: Setup E2E tests
        run: cd e2e && yarn --immutable

      - name: Run E2E tests
        run: cd e2e && yarn e2e

      - name: Store the e2e artifacts
        uses: actions/upload-artifact@v3
        with:
          name: e2e-dist
          path: e2e/dist/
          retention-days: 1

  build-image:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Retrieve the build artifacts
        uses: actions/download-artifact@v3
        with:
          name: web-dist
          path: apps/gizual-app/dist/

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile.web
          context: .
          push: ${{ startsWith(github.ref, 'refs/tags/') }} # Only push the image if the event was a tag
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-image
    runs-on: ubuntu-22.04
    steps:
      - name: Call Webhook
        run: |
          curl --request GET '${{ secrets.COOLIFY_WEBHOOK_WEB }}' --header 'Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}'
