@use "@/mixins" as *;

.BaseQueryModule {
  @include rounded;
  background-color: var(--background-tertiary);
  display: flex;
  flex-direction: row;
  gap: 0.75rem;
  padding: 0 0.5rem;
  align-items: center;
  position: relative;
  flex-shrink: 0;
  color: var(--foreground-primary);
}

.PlaceholderQueryModule {
  border-style: dashed;
  border-width: 2px;
  background-color: var(--background-secondary);
  color: var(--foreground-tertiary);
  cursor: pointer;

  transition: background-color 0.25s;
  &:hover {
    background-color: var(--background-tertiary);
  }
}

.PlaceholderQueryModuleTrigger {
  display: flex;
  height: 100%;
}

.TypeSteps {
  width: 100%;
  height: 100%;
  position: relative;
}

.TypeDialog {
  height: 80vh;
  max-height: 900px;
  max-width: 700px;
  position: relative;
}

.TypeDialogGrid {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 1rem;
  width: 100%;
}

.TypeDialogGridItemTile {
  width: 300px;
  height: 100%;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  border: 1px solid var(--border-primary);
  background-color: var(--background-primary);
  transition: background-color 0.25s;

  &:hover {
    background-color: var(--background-tertiary) !important;
    border-color: var(--accent-main);
    cursor: pointer;
  }
}

.TypeDialogGridItem {
  position: relative;

  input[type="radio"] {
    display: none;
  }

  input[type="radio"]:checked + .TypeDialogGridItemTile {
    outline: 3px solid var(--accent-main);
    outline-offset: -3px;
  }
}

.TypeDialogGridItemImage {
  width: 300px;
  height: 300px;
  background-color: var(--background-secondary);
}

.TypeDialogGridItemContent {
  padding: 0.5rem;
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.TypeDialogGridItemTitle {
  @include text-lg;
  font-weight: medium;
  text-align: left;
}

.TypeDialogGridItemDescription {
  @include text-base;
  text-align: left;
}

.QueryModuleIcon {
  width: 15px;
  height: 15px;
}

.QueryModuleTitle {
  @include text-base;
  text-align: left;
}

.QueryModuleIconWithText {
  display: flex;
  flex-direction: row;
  gap: 0.25rem;
  align-items: center;
}

.SpacedChildren {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  height: 100%;
  align-items: center;
}

.SpacedSmall {
  display: flex;
  flex-direction: row;
  gap: 0.25rem;
  height: 100%;
  align-items: center;
}

.ControlWithLabel {
  display: flex;
  flex-direction: row;
  margin: auto auto;
  gap: 0.25rem;
  align-items: center;
}

.ControlWithLabel__Label {
  @include text-base;
  white-space: nowrap;
  text-align: left;
  color: var(--foreground-secondary);
}

.IconBase {
  width: 20px;
  height: 20px;
  transition: 0.25s border;
  transition: 0.25s background-color;
  cursor: pointer;
}

.IconBase:hover {
  background-color: var(--background-primary) !important;
}

.IconToggled {
  background-color: var(--background-secondary);
  border: 1px solid var(--accent-main);
}

.IconUnToggled {
  background-color: unset;
  border: 1px solid var(--background-tertiary);
}

.FileTreeWrapper {
  height: 80vh;
  min-width: 30vw;
}

.CloseIcon {
  width: 15px;
  height: 15px;
  & > path {
    fill: var(--color-tomato);
  }
  cursor: pointer;
}
