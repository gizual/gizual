@use "@/mixins" as *;
@use "@/shared" as shared;

.BaseQueryModule {
  border: 1px solid var(--border-primary);
  border-radius: 2px;
  background-color: var(--background-primary);
  display: flex;
  flex-direction: row;
  gap: 0.75rem;
  padding: 0.125rem 0.5rem;
  align-items: center;
  position: relative;
  flex-shrink: 0;
  color: var(--foreground-primary);
  box-sizing: border-box;
  animation: slot-in 500ms cubic-bezier(0.16, 1, 0.3, 1) forwards;

  &[aria-expanded="true"] {
    background-color: var(--background-tertiary);
    border: 1px dashed var(--accent-main) !important;
  }
}

.SwapButton {
  border-color: var(--border-tertiary);
  &[aria-expanded="true"] {
    background-color: var(--background-tertiary);
    border: 1px solid var(--accent-main);
  }
}

@keyframes slot-in {
  from {
    opacity: 0;
    transform: translateY(-8px);
    border-color: var(--border-secondary);
  }
  to {
    opacity: 1;
    transform: translateY(0);
    border-color: var(--border-primary);
  }
}

.BaseQueryModuleColumn {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  flex-grow: 1;
  flex-shrink: 1;
  overflow: hidden;
  min-width: 250px;
  width: 100%;
  padding: 0.5rem 1rem 1rem 1rem;

  &:not(:first-of-type) {
    border-top: 1px solid var(--border-primary);
  }

  background-color: var(--background-secondary);

  &:nth-of-type(even) {
    background-color: var(--background-secondary-shaded);
  }
}

.BaseQueryModuleColumn__Header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.PlaceholderQueryModule {
  border-style: dashed;
  border-width: 2px;
  background-color: var(--background-secondary);
  color: var(--foreground-tertiary);
  cursor: pointer;

  transition: background-color 0.25s;
  &:hover {
    background-color: var(--background-tertiary);
    color: var(--foreground-tertiary);
  }
}

.PlaceholderQueryModuleTrigger {
  display: flex;
}

.TypeDialog {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  flex-grow: 1;
  overflow-x: hidden;
  overflow-y: auto;
  display: block;
  container: type-modal-container / inline-size;
}

.TypeDialogSplit {
  display: grid;
  grid-template-columns: 1fr 1px auto;
  gap: 1rem;
  padding-right: 0.5rem;
}

.TypeDialog__Left {
  flex-grow: 1;
  flex-shrink: 1;
  height: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.VerticalRuler {
  position: sticky;
  top: 0px;
  width: 1px;
  background-color: var(--border-primary);
}

.TypeDialog__Right {
  height: fit-content;
  position: sticky;
  top: 0;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.TypeDialog__Section {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.TypeDialogGridItemImage {
  width: 100%;
  background-color: var(--background-primary);

  @container type-modal-container (width < 900px) {
    width: 150px;
  }

  max-height: 70dvh;
}

.TypeDialogActionButtons {
  padding-top: 1rem;
  margin-top: 1rem;
  display: flex;
  flex-direction: row;
  gap: 1rem;
  justify-content: flex-end;
  padding-bottom: 0.25rem;
}

.QueryModuleIcon {
  width: 20px;
  height: 20px;
  & * {
    fill: var(--foreground-primary);
  }
}

.QueryModuleTitle {
  @include text-sm;
  text-align: left;
  font-weight: 500;
}

.QueryModuleIconWithText {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  align-items: center;
}

.SpacedChildren {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  margin: 0.125rem 0;
  align-items: center;
}

.LabelWithInput {
  display: flex;
  flex-direction: row;
  gap: 1rem;
  width: 100%;
  align-items: center;
}

.SpacedSmall {
  display: flex;
  flex-direction: row;
  gap: 0.25rem;
  height: 100%;
  align-items: center;
}

.ControlWithLabel {
  display: flex;
  flex-direction: row;
  margin: auto auto;
  gap: 0.25rem;
  align-items: center;
}

.ControlWithLabel__Label {
  @include text-sm;
  white-space: nowrap;
  text-align: left;
  color: var(--foreground-secondary);
}

.IconBase {
  width: 20px;
  height: 20px;
  transition: 0.25s border;
  transition: 0.25s background-color;
  cursor: pointer;
  & > path {
    fill: none;
  }
}

.IconLarge {
  width: 28px;
  height: 28px;
  border-radius: 4px;
}

.ToggleButton {
  transition:
    background-color 0.25s,
    border-color 0.25s;
}

.IconToggled {
  background-color: var(--background-primary) !important;
  border: 1px solid var(--accent-main);
}

.IconUnToggled {
  background-color: var(--background-tertiary);
  border-color: var(--border-tertiary);
}

.IconToggled:hover {
  background-color: var(--background-secondary);
}

.IconUnToggled:hover {
  background-color: var(--background-secondary);
}

.FileTreeWrapper {
  min-height: 50dvh;
  min-width: 45dvw;
}

.CloseIcon {
  width: 20px;
  height: 20px;
  & > path {
    fill: var(--foreground-primary);
  }
  cursor: pointer;
}

.ContainsErrors {
  border-bottom: 2px solid var(--accent-tertiary);
}

.GradientColorCustomization {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 0.5rem 0.5rem;
}

.GradientColorCustomizationRow {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  align-items: center;
}

.GradientColorTitle {
  @include text-sm;
  padding-left: 0.75rem;
}

.TypeButton {
  width: 100%;
  height: 100%;
  border-radius: 2px;
  border-color: var(--border-primary);
  &:hover {
    border-color: var(--accent-main-dark);
  }
}

.Module__Column {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  width: 100%;

  animation: slot-in 500ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
}

.Module__SpaceBetween {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
