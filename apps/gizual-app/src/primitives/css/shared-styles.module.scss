@use "@/mixins" as *;
@layer reset, components, overrides;

@mixin panel {
  min-width: 300px;
  height: 100%;
  position: relative;
  display: flex;
  padding: 0.5rem 0.5rem;
  flex-direction: column;
  gap: 1rem;
  flex-shrink: 0;
  overflow-y: auto;
}

@mixin card {
  position: relative;
  display: flex;
  flex-direction: column;
}

@mixin card-title {
  @include text-2xs;
  text-align: left;
  font-family: "Iosevka Extended", monospace;
  margin: 0.75rem 0 0 0;
  flex-grow: 1;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  line-height: 120%;
}

.CardTitle {
  @include card-title;
}

.Card {
  @include card;
}

@mixin card-head {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  gap: 0;
  flex: 0 0;
  margin-bottom: 0.5rem;
}

.CardHead {
  @include card-head;
}

@mixin right-aligned-group {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  justify-self: flex-end;
  flex-wrap: wrap;
  align-content: flex-end;
  flex-shrink: 0;
}

.RightAlignedGroup {
  @include right-aligned-group;
}

@mixin svg-icon {
  width: 32px;
  height: 32px;
  flex-grow: 0;
  flex-shrink: 0;
}

.Panel {
  @include panel;
}

@mixin section {
  @include rounded;
}

.Section {
  @include section;
}

@mixin section-head {
  background-color: var(--background-secondary);
  padding: 0.5rem 1rem;
  border-bottom: 1px solid var(--border-primary);
  display: flex;
  flex-direction: row;

  h1 {
    @include text-lg;
  }
}

.SectionHead {
  @include section-head;
}

@mixin section-body {
  padding: 0.5rem 1rem;
}

.SectionBody > * {
  @include section-body;
}

@mixin block {
  border-bottom: 1px solid var(--border-primary);
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding-bottom: 1rem;
}

.Block {
  @include block;
}

.sectionBody .block:last-of-type {
  border-bottom: none;
}

.colorPicker {
  font-family: "Iosevka Extended" !important;
  white-space: nowrap !important;
}

@mixin inline-row {
  display: inline-flex;
  flex-direction: row;
  justify-content: flex-start;
  gap: 0.5rem;
  flex: 0 0;
}

.InlineRow {
  @include inline-row;
}

@mixin inline-col {
  display: inline-flex;
  flex-direction: column;
  justify-content: flex-start;
  gap: 0.5rem;
  flex: 0 0;
}

.InlineColumn {
  @include inline-col;
}

.FullWidth {
  width: 100%;
}

.ToolbarIcon {
  @include svg-icon;
  width: 90%;
  height: 90%;
}

.FlexGrow {
  position: relative;
  flex-grow: 1;
  flex-shrink: 0;
  width: 100%;
  height: 100%;
}

.CursorDefault {
  cursor: default;
}

.CursorPointer {
  cursor: pointer !important;
}

.CursorCanDrag {
  cursor: grab !important;
}

.CursorDragging {
  cursor: grabbing !important;
}

/* Overlay that covers things beneath a Popover */
.PopoverUnderlay {
  @include z-index-overlay;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: #00000080;

  animation: overlayShow 350ms cubic-bezier(0.16, 1, 0.3, 1);
  @keyframes overlayShow {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

.PopoverMax {
  @include z-index-max;
}

@layer overrides {
  .CloseButton {
    width: 24px;
    height: 24px;
    & path {
      fill: var(--foreground-primary);
      transition: fill 0.2s;
    }
  }

  .CloseButton:hover {
    background-color: var(--color-tomato);
    border-color: var(--color-tomato);
    & path {
      fill: white;
    }
  }
}

.FlexColumn {
  display: flex;
  flex-direction: column;
}

.JustifyBetween {
  justify-content: space-between;
}

.JustifyEnd {
  justify-content: flex-end;
}

.FlexRow {
  display: flex;
  flex-direction: row;
}

.InlineFlexRow {
  display: inline-flex;
  flex-direction: row;
}

.Grow {
  flex-grow: 1;
}

.Grow0 {
  flex-grow: 0;
}

.Shrink0 {
  flex-shrink: 0;
}

.Shrink {
  flex-shrink: 1;
}

.Gap-1 {
  gap: 0.25rem;
}

.Gap-2 {
  gap: 0.5rem;
}

.Gap-3 {
  gap: 0.75rem;
}

.Gap-4 {
  gap: 1rem;
}

.Text-2Xs {
  @include text-2xs;
}

.Text-Xs {
  @include text-xs;
}

.Text-Sm {
  @include text-sm;
}

.Text-Base {
  @include text-sm;
}

.Text-Lg {
  @include text-lg;
}

.Text-Xl {
  @include text-xl;
}

.Text-2Xl {
  @include text-2xl;
}

.Text-Left {
  text-align: left;
}

.Text-Italic {
  font-style: italic;
}

.Text-Bold {
  font-weight: 700;
}

.Text-Medium {
  font-weight: 600;
}

.Text-Normal {
  font-weight: 400;
}

.Text-Accent {
  color: var(--accent-main);
}

.Items-Center {
  align-items: center;
}

.Pointer-None {
  pointer-events: none;
  * {
    pointer-events: none;
  }
}

.Pointer {
  cursor: pointer;
}

.Separator {
  width: 1px;
  border-right: 1px solid var(--border-primary);
}

.Hidden {
  display: none;
}

.Visible {
  display: block;
}

.Opacity0 {
  opacity: 0;
}

.Opacity100 {
  opacity: 1;
}

.TransitionOpacity {
  transition: opacity 0.25s;
}
